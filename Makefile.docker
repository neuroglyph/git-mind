# SPDX-License-Identifier: LicenseRef-MIND-UCAL-1.0
# Â© 2025 J. Kirby Ross / Neuroglyph Collective
# GitMind C Implementation Makefile - Runs inside Docker

include docker-guard.mk

CC ?= cc
CFLAGS ?= -O3 -Wall -Wextra -Werror -pedantic -std=c99 -Iinclude -Isrc -flto -Wstrict-prototypes -Wwrite-strings -Wshadow -Wformat=2
LDFLAGS ?= -flto

# Try to use pkg-config for libgit2
LIBGIT2_CFLAGS := $(shell pkg-config --cflags libgit2 2>/dev/null || echo "")
LIBGIT2_LIBS := $(shell pkg-config --libs libgit2 2>/dev/null || echo "-lgit2")

CFLAGS += $(LIBGIT2_CFLAGS)
LDFLAGS += $(LIBGIT2_LIBS)

# Platform detection
UNAME_S := $(shell uname -s)
ifeq ($(UNAME_S),Linux)
    # Linux-specific flags
endif
ifeq ($(UNAME_S),Darwin)
    # macOS specific flags
endif

# Windows/MinGW detection
ifeq ($(OS),Windows_NT)
    TARGET = git-mind.exe
else
    TARGET = git-mind
endif

SRCS = src/cli/main.c \
       src/core/init.c src/core/context.c src/core/link.c src/core/link_list.c \
       src/core/status.c src/core/traverse.c src/core/check.c \
       src/backends/libgit2.c src/backends/test.c src/backends/git_lifecycle.c \
       src/storage/orphan_ref.c src/storage/orphan_ref_ctx.c src/storage/tree_merge.c src/storage/fanout.c \
       src/storage/path_mapping.c src/storage/type_mapping.c src/storage/blob_ops.c \
       src/utils/sha256.c src/utils/sha1.c src/utils/path.c src/utils/ulid.c \
       src/utils/cbor.c src/utils/path_resolution.c
OBJS = $(SRCS:.c=.o)

all: $(TARGET)

$(TARGET): $(OBJS)
	$(CC) -o $@ $^ $(LDFLAGS)
ifeq ($(UNAME_S),Darwin)
	strip $@
else
	strip --strip-all $@
endif

debug: CFLAGS = -g -O0 -Wall -Wextra -std=c99 -Iinclude -Isrc -fsanitize=address,undefined $(LIBGIT2_CFLAGS)
debug: LDFLAGS += -fsanitize=address,undefined
debug: $(TARGET)

clean:
	rm -f $(TARGET) $(OBJS)

install: $(TARGET)
	install -m 755 $(TARGET) /usr/local/bin/

.PHONY: all clean install debug test

test: $(TARGET)
	@echo "Running integration tests..."
	@./tests/integration/test.sh
	@./tests/integration/test_behavior.sh