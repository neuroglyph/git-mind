# SPDX-License-Identifier: LicenseRef-MIND-UCAL-1.0
# Â© 2025 J. Kirby Ross / Neuroglyph Collective
#
# STRICT clang-tidy configuration for core/ and apps/
# Goal: Code so clean Linus would just nod approvingly
#
Checks: >
  -*,
  bugprone-*,
  cert-*,
  clang-analyzer-*,
  cppcoreguidelines-*,
  misc-*,
  performance-*,
  portability-*,
  readability-*,
  # Only include modernize checks that are relevant for C23
  modernize-deprecated-headers,
  modernize-redundant-void-arg,
  modernize-use-bool-literals,
  # Explicitly exclude ALL C++-specific modernize checks
  -modernize-avoid-bind,
  -modernize-concat-nested-namespaces,
  -modernize-loop-convert,
  -modernize-make-shared,
  -modernize-make-unique,
  -modernize-pass-by-value,
  -modernize-replace-auto-ptr,
  -modernize-replace-random-shuffle,
  -modernize-return-braced-init-list,
  -modernize-shrink-to-fit,
  -modernize-use-auto,
  -modernize-use-default-member-init,
  -modernize-use-emplace,
  -modernize-use-equals-default,
  -modernize-use-equals-delete,
  -modernize-use-nodiscard,
  -modernize-use-noexcept,
  -modernize-use-nullptr,
  -modernize-use-override,
  -modernize-use-trailing-return-type,
  -modernize-use-transparent-functors,
  -modernize-use-uncaught-exceptions,
  -cppcoreguidelines-init-variables,
  -readability-isolate-declaration,
  -cppcoreguidelines-avoid-magic-numbers,
  -readability-magic-numbers,
  -cppcoreguidelines-macro-to-enum,
  -modernize-macro-to-enum

WarningsAsErrors: >
  readability-function-size,
  readability-identifier-naming,
  bugprone-*,
  cert-*

CheckOptions:
  # Function size limits - Still strict but not masochistic
  - key: readability-function-size.LineThreshold
    value: '25'
  - key: readability-function-size.StatementThreshold
    value: '20'
  - key: readability-function-size.BranchThreshold
    value: '5'
  - key: readability-function-size.ParameterThreshold
    value: '5'
  - key: readability-function-size.NestingThreshold
    value: '3'
  - key: readability-function-size.VariableThreshold
    value: '7'
  
  # Naming conventions - Linux kernel style
  - key: readability-identifier-naming.FunctionCase
    value: 'lower_case'
  - key: readability-identifier-naming.VariableCase
    value: 'lower_case'
  - key: readability-identifier-naming.GlobalConstantCase
    value: 'UPPER_CASE'
  - key: readability-identifier-naming.GlobalConstantPrefix
    value: 'GM_'
  - key: readability-identifier-naming.MacroDefinitionCase
    value: 'UPPER_CASE'
  - key: readability-identifier-naming.EnumConstantCase
    value: 'UPPER_CASE'
  - key: readability-identifier-naming.EnumConstantPrefix
    value: 'GM_'
  - key: readability-identifier-naming.TypedefCase
    value: 'lower_case'
  - key: readability-identifier-naming.TypedefSuffix
    value: '_t'
  
  # Minimum identifier length
  - key: readability-identifier-length.MinimumVariableNameLength
    value: '3'
  - key: readability-identifier-length.MinimumParameterNameLength
    value: '3'
  - key: readability-identifier-length.MinimumLoopCounterNameLength
    value: '1'  # Allow 'i', 'j', 'k' for loops
  
  # Magic numbers - must be named constants
  - key: readability-magic-numbers.IgnoredIntegerValues
    value: '0;1;-1'  # Only these literals allowed
  - key: readability-magic-numbers.IgnoredFloatingPointValues
    value: '0.0;1.0'
    
  # Braces - always required
  - key: readability-braces-around-statements.ShortStatementLines
    value: '0'  # Even single-line statements need braces
    
  # Complexity limits
  - key: readability-function-cognitive-complexity.Threshold
    value: '10'
  - key: readability-function-cognitive-complexity.DescribeBasicIncrements
    value: 'true'

# Only check our code, not system headers
HeaderFilterRegex: '^(core|apps)/.*'