# SPDX-License-Identifier: Apache-2.0
name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  build-linux:
    needs: create-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install cross-compilation tools
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu
    
    - name: Build static binary
      working-directory: ./c
      run: |
        if [ "${{ matrix.arch }}" = "aarch64" ]; then
          export CC=aarch64-linux-gnu-gcc
          export CFLAGS="-static -O3"
        else
          export CFLAGS="-static -O3"
        fi
        make clean
        make
        mv gitmind gitmind-linux-${{ matrix.arch }}
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./c/gitmind-linux-${{ matrix.arch }}
        asset_name: gitmind-linux-${{ matrix.arch }}
        asset_content_type: application/octet-stream

  build-macos:
    needs: create-release
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build universal binary
      working-directory: ./c
      run: |
        # Build for arm64
        make clean
        CFLAGS="-O3 -arch arm64" make
        mv gitmind gitmind-arm64
        
        # Build for x86_64
        make clean
        CFLAGS="-O3 -arch x86_64" make
        mv gitmind gitmind-x86_64
        
        # Create universal binary
        lipo -create gitmind-arm64 gitmind-x86_64 -output gitmind-macos-universal
        
        # Also create individual binaries
        mv gitmind-arm64 gitmind-macos-arm64
        mv gitmind-x86_64 gitmind-macos-x86_64
    
    - name: Upload universal binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./c/gitmind-macos-universal
        asset_name: gitmind-macos-universal
        asset_content_type: application/octet-stream
    
    - name: Upload arm64 binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./c/gitmind-macos-arm64
        asset_name: gitmind-macos-arm64
        asset_content_type: application/octet-stream
    
    - name: Upload x86_64 binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./c/gitmind-macos-x86_64
        asset_name: gitmind-macos-x86_64
        asset_content_type: application/octet-stream

  build-windows:
    needs: create-release
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up MinGW
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          mingw-w64-x86_64-gcc
          make
    
    - name: Build Windows executable
      shell: msys2 {0}
      working-directory: ./c
      run: |
        make clean
        make
        mv gitmind.exe gitmind-windows-x86_64.exe
    
    - name: Upload Windows binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./c/gitmind-windows-x86_64.exe
        asset_name: gitmind-windows-x86_64.exe
        asset_content_type: application/octet-stream