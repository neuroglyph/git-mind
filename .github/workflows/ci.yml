# SPDX-License-Identifier: LicenseRef-MIND-UCAL-1.0
name: CI

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git
        
    - name: Build and Test
      run: |
        # Use Docker for all builds and tests
        docker compose build
        # Run tests directly in container without calling make test (which tries to use Docker)
        docker compose run --rm -T dev bash -c "make -C /workspace/src && cd /tmp && cp -r /workspace/tests . && cp /workspace/build/bin/git-mind . && export GIT_MIND=/tmp/git-mind && cd tests && bash integration/test_behavior.sh"
        
    - name: Run benchmarks
      run: |
        docker compose run --rm -T dev make benchmark || true
        
    - name: Extract binary from Docker
      run: |
        # Build the binary inside Docker and extract it for CI artifacts only
        docker compose run --rm -T -v $(pwd)/ci-artifacts:/artifacts dev sh -c "make -C src && cp /workspace/build/bin/git-mind /artifacts/git-mind-linux"
        # The binary is now in ci-artifacts/ which is NOT in the repo
        
    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: gitmind-linux
        path: ci-artifacts/git-mind-linux

  cross-platform:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install openssl
        
    - name: Build
      run: |
        DOCKER_BUILD=1 make clean
        DOCKER_BUILD=1 make
        
    - name: Test
      run: |
        export PATH="$PWD:$PATH"
        cd tests && bash integration/test_behavior.sh