#!/usr/bin/env bash
set -euo pipefail

echo "ðŸ”¥  Running full CI stack in Docker before pushâ€¦"

# Pick an image tag that mirrors CI's Ubuntu + LLVM setup
IMAGE=gitmind-ci:latest

# Build the image only if it doesn't exist or Dockerfile changed
docker build -q -t $IMAGE .ci 2>/dev/null || {
  echo "ðŸ”„  Building CI image (first time or Dockerfile changed)â€¦"
  docker build -t $IMAGE .ci
}

# Run the same Meson/Ninja/clang-tidy script used in GH Actions
docker run --rm -t \
  -v "$PWD":/workspace \
  -w /workspace \
  $IMAGE \
  bash -c '
    set -e
    rm -rf build-container
    meson setup build-container
    ninja -C build-container
    ninja -C build-container test
    
    # Run clang-tidy exactly like CI
    clang-tidy -quiet -p . --config-file=quality/.clang-tidy \
      $(git ls-files "core/**/*.c" "core/**/*.h") \
      | tee clang-tidy-report-full.txt || true
    
    # Filter to just project warnings
    grep -E "^/.*core/|^core/" clang-tidy-report-full.txt > clang-tidy-report.txt || true
    
    # Check against baseline
    python3 tools/parse_warnings.py check clang-tidy-report.txt tools/baseline_grouped.txt
'

echo "âœ…  Local CI passedâ€”pushing allowed."