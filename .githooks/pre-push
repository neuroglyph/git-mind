#!/bin/bash
# Pre-push hook that runs THE EXACT SAME CHECKS AS CI
# If this passes, CI will pass. Period.

set -e

# Add LLVM to PATH if on Mac
export PATH="/opt/homebrew/opt/llvm/bin:$PATH"

echo "üõ°Ô∏è Running CI checks locally before push..."

# 1. Build with meson
echo "üì¶ Building with meson..."
meson setup build-push >/dev/null 2>&1 || true
ninja -C build-push

# 2. Run clang-tidy with baseline enforcement (EXACTLY like CI)
echo "üîç Running clang-tidy diff-guard..."
clang-tidy -quiet -p build-push --config-file=quality/.clang-tidy \
    $(git ls-files 'core/**/*.c' 'core/**/*.h') \
    | tee /tmp/clang-tidy-report-full.txt || true

# Filter to just project warnings
grep -E "^/.*core/|^core/" /tmp/clang-tidy-report-full.txt > /tmp/clang-tidy-report.txt || true

# Enforce no new warnings using grouped baseline
echo "‚öñÔ∏è Checking for new warnings..."
python3 tools/parse_warnings.py check /tmp/clang-tidy-report.txt tools/baseline_grouped.txt || {
    echo "‚ùå New warnings detected! Fix them before pushing."
    exit 1
}

# 3. Run tests with sanitizers
echo "üß™ Running tests with sanitizers..."

if [[ "$OSTYPE" == "darwin"* ]]; then
    # On macOS, use Docker to run tests in Linux environment like CI
    echo "Running sanitizer tests in Docker (macOS detected)..."
    docker run --rm -v "$(pwd):/workspace" -w /workspace ubuntu:22.04 bash -c "
        apt-get update && apt-get install -y clang-20 meson ninja-build pkg-config libsodium-dev wget gnupg lsb-release
        wget -O - https://apt.llvm.org/llvm.sh | bash -s -- 20
        CC=clang-20 CFLAGS='-fsanitize=address -fno-omit-frame-pointer -g' meson setup build-asan -Db_sanitize=address
        ninja -C build-asan
        ASAN_OPTIONS=detect_leaks=1:strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1 ninja -C build-asan test
    " || {
        echo "‚ùå Address sanitizer tests failed!"
        exit 1
    }
else
    # Native Linux
    rm -rf build-asan
    CC=clang CFLAGS="-fsanitize=address -fno-omit-frame-pointer -g" meson setup build-asan -Db_sanitize=address
    ninja -C build-asan
    ASAN_OPTIONS=detect_leaks=1:strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1 \
        ninja -C build-asan test || {
        echo "‚ùå Address sanitizer tests failed!"
        exit 1
    }
fi

echo "‚úÖ All CI checks passed! Safe to push."